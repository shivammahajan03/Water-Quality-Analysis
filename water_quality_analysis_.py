# -*- coding: utf-8 -*-
"""Water Quality Analysis..ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1wZXtuF3fBoBCIXD7HlXobHbA47w77TmN
"""
# Analysis start

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

# Load the dataset
water_dataset = pd.read_csv("Water Quality Analysis/water_potability.csv")

# Display the first few rows of the DataFrame

print("First few rows of the dataset:")
print(water_dataset.head())

# total rows in the dataset

print("Total number of rows in the dataset:", len(water_dataset))

# summary statistics

print("\nSummary statistics:")
print(water_dataset.describe())

# Check for missing values

print("\nMissing values in each column:")
print(water_dataset.isnull().sum())

# Handling missing values

# Option 1 - Delete the rows with missing values
# water_dataset.dropna(inplace=True)

# Option 2 - Fill missing values with mean
water_dataset.fillna(water_dataset.mean(), inplace=True)

# Verify that there are no missing values

print("\nMissing values after handling:")
print(water_dataset.isnull().sum())

print("Total number of rows in the dataset after handling:", len(water_dataset))

# Handling outliers
# Use z-score to identify outliers

from scipy.stats import zscore

z_scores = np.abs(zscore(water_dataset))
outliers = np.where(z_scores > 3)

# Removing outliers
water_dataset_clean = water_dataset[(z_scores < 3).all(axis=1)]
# z_scores = (water_dataset - water_dataset.mean()) / water_dataset.std()

# Verify the shape of the dataset after removing outliers
print("\nShape of the dataset after removing outliers:")
print(water_dataset_clean.shape)

"""# Exploratory Data Analysis (EDA)"""

# Histograms of all columns
water_dataset_clean.hist(figsize=(15, 10), bins=20)
plt.suptitle("Histograms of all columns")
plt.show()

# Box plots to check for outliers
water_dataset_clean.plot(kind='box', subplots=True, layout=(4, 3), figsize=(15, 10), sharex=False, sharey=False)
plt.suptitle("Box plots of all columns")
plt.show()

# Correlation matrix
corr_matrix = water_dataset_clean.corr()
print("\nCorrelation matrix:")
print(corr_matrix)

# Heatmap of the correlation matrix

plt.figure(figsize=(12, 8))
sns.heatmap(corr_matrix, annot=True, cmap='coolwarm')
plt.title("Heatmap of the Correlation Matrix")
plt.show()

# Scatter plots to understand relationships

sns.pairplot(water_dataset_clean, diag_kind='kde')
plt.suptitle("Pairplot of all columns", y=1.02)
plt.show()